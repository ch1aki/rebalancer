on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ch1aki/rebalancer
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=IMAGE_NAME::${IMAGE_NAME}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ch1aki
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build:image'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ steps.branch_name.outputs.IMAGE_NAME }}:${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Build manifests
        run: |
          make kustomize
          make release IMG=ghcr.io/${{ steps.branch_name.outputs.IMAGE_NAME }}:${GITHUB_REF#refs/tags/}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.yaml
          asset_name: release.yaml
          asset_content_type: application/x-yaml